<?php

namespace Theamostafa\Wallet\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\Relations\HasMany;
use Illuminate\Database\Eloquent\Relations\MorphTo;
use Str;

/**
 * Class Wallet.
 *
 * @property string $holder_type
 * @property int|string $holder_id
 * @property string $name
 * @property string $slug
 * @property string $uuid
 * @property string $description
 * @property null|array $meta
 * @property $holder
 *
 * @method int getKey()
 */
class Wallet extends Model {
    use HasFactory;

    protected $guarded = [];
    protected $casts = [
        'meta' => 'json',
    ];

    protected $attributes = [
        'balance' => 0
    ];

    protected static function booted() {
        parent::booted(); // TODO: Change the autogenerated stub
        static::creating(function ($model) {
            $model->slug = Str::slug($model->name);
            $model->uuid = Str::uuid();
        });
    }

    public function getOriginalBalanceAttribute(): string {
        return (string)$this->getRawOriginal('balance', 0);
    }

    public function getAvailableBalanceAttribute(): float|int|string {
        return $this->transactions()
            ->where('confirmed', true)
            ->sum('amount');
    }

    public function holder(): MorphTo {
        return $this->morphTo();
    }
    public function transactions(): HasMany {
        return $this->hasMany(Transaction::class, 'wallet_id');
    }
}
